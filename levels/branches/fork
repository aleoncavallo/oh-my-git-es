title = Hacer commits paralelos
cards = checkout commit-auto

[description]

¿Sabías que crear líneas de tiempo paralelas es perfectamente legal y seguro? ¡Es verdad!

¿Puedes descubrir cuándo salieron mal las cosas en este zoológico? ¡Entonces, retrocede al último commit bueno y crea un universo paralelo donde todos estén felices!

[cli]

El animal azul representa un concepto conocido como el "puntero HEAD" en Git: te muestra qué commit es el actual.

Aquí hay un truco genial para ir al commit anterior:

    git checkout HEAD^

También puedes retroceder dos commits escribiendo, por ejemplo:

    git checkout HEAD~2

[setup]

mkdir jaula
echo "Se ve muy hambriento." > jaula/león

echo "Un niño pequeño.
¡Realmente ama a los gatos!" > niño
git add .
git commit -m "El comienzo"

echo "Está sosteniendo una paleta." >> niño
git commit -am "El niño compra algo"

mv niño jaula
git add .
git commit -m "El niño trepa a algún lugar"

git rm jaula/niño
echo "Se ve feliz. :)" > jaula/león
git add .
git commit -m "Oh no"

echo "Está durmiendo." > jaula/león
git add .
git commit -m "¡Hora de la siesta!"

git checkout --detach
git branch -d main

[win]

# Asegúrate de que el niño esté feliz.
git ls-tree --name-only -r HEAD | grep niño

# Asegúrate de que el león consiga algo para comer.
git show HEAD:jaula/león | grep -v "muy hambriento"

[congrats]

¡Uf, buen trabajo! Este parece ser un resultado *mucho* mejor.

Siéntete libre de agregar más líneas de tiempo paralelas o hacerlas más largas.

Si estás listo, nuestra próxima misión ya está esperando...
